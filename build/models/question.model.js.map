{"version":3,"sources":["../../src/models/question.model.js"],"names":["mongoose","require","Schema","questionSchema","question","type","String","categories","Types","ObjectId","ref","option1","answer","users","option2","author","like","dislike","timestamps","module","exports","model"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAMC,cAAc,GAAG,IAAID,MAAJ,CACnB;AACIE,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,MADA;AAENL,IAAAA,OAAO,EAAE;AAFH,GADd;AAKIM,EAAAA,UAAU,EAAE,CAAC;AAAEF,IAAAA,IAAI,EAAEH,MAAM,CAACM,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD,CALhB;AAMIC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAEN,MADH;AAELO,IAAAA,KAAK,EAAE,CAAC;AAAER,MAAAA,IAAI,EAAEH,MAAM,CAACM,KAAP,CAAaC,QAArB;AAA+BC,MAAAA,GAAG,EAAE;AAApC,KAAD;AAFF,GANb;AAUII,EAAAA,OAAO,EAAE;AACLF,IAAAA,MAAM,EAAEN,MADH;AAELO,IAAAA,KAAK,EAAE,CAAC;AAAER,MAAAA,IAAI,EAAEH,MAAM,CAACM,KAAP,CAAaC,QAArB;AAA+BC,MAAAA,GAAG,EAAE;AAApC,KAAD;AAFF,GAVb;AAcIK,EAAAA,MAAM,EAAE;AAAEV,IAAAA,IAAI,EAAEH,MAAM,CAACM,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAdZ;AAeIM,EAAAA,IAAI,EAAE,CAAC;AAAEX,IAAAA,IAAI,EAAEH,MAAM,CAACM,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD,CAfV;AAgBIO,EAAAA,OAAO,EAAE,CAAC;AAAEZ,IAAAA,IAAI,EAAEH,MAAM,CAACM,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD;AAhBb,CADmB,EAmBnB;AACIQ,EAAAA,UAAU,EAAE;AADhB,CAnBmB,CAAvB;AAwBAC,MAAM,CAACC,OAAP,GAAiBpB,QAAQ,CAACqB,KAAT,CAAe,UAAf,EAA2BlB,cAA3B,CAAjB","sourcesContent":["const mongoose = require('mongoose');\r\nconst Schema = mongoose.Schema;\r\n\r\nconst questionSchema = new Schema(\r\n    {\r\n        question: {\r\n            type: String,\r\n            require: true\r\n        },\r\n        categories: [{ type: Schema.Types.ObjectId, ref: 'Category' }],\r\n        option1: {\r\n            answer: String,\r\n            users: [{ type: Schema.Types.ObjectId, ref: 'User' }]\r\n        },\r\n        option2: {\r\n            answer: String,\r\n            users: [{ type: Schema.Types.ObjectId, ref: 'User' }]\r\n        },\r\n        author: { type: Schema.Types.ObjectId, ref: 'User' },\r\n        like: [{ type: Schema.Types.ObjectId, ref: 'User' }],\r\n        dislike: [{ type: Schema.Types.ObjectId, ref: 'User' }]\r\n    },\r\n    {\r\n        timestamps: true\r\n    }\r\n);\r\n\r\nmodule.exports = mongoose.model('Question', questionSchema);"],"file":"question.model.js"}