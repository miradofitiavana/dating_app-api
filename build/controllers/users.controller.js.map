{"version":3,"sources":["../../src/controllers/users.controller.js"],"names":["User","require","Question","bcrypt","jwt","config","exports","getMe","req","res","next","token","headers","authorization","decoded","decode","findById","id","then","re","send","data","e","console","log","getQuestionsAVoter","populate","getMyQuestions","find","author","getLikeMutual","liked","map","el","user","_id","retour","likedme","forEach","element","includes","push","getLikedMe","rejected","a","user_id","all","concat","reject","findByIdAndUpdate","$push","body","id_user","status","state","err","message","match","getSuggestions","questions","answered","$nin","firstUpload","reqFiles","i","files","length","filename","photo","useFindAndModify","result","response","firstname","isAdmin","nbr_photos","nbr_answered","er","json","error","countQuestions","params","nombre","login","findOne","email","auth","display","compare","compareSync","password","userToken","sign","admin","secret","expiresIn","register","hashedPassword","hashSync","gender","birthday","location","save"],"mappings":"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","sourcesContent":["const User = require('./../models/user.model');\r\nconst Question = require('./../models/question.model');\r\nconst bcrypt = require('bcrypt');\r\nconst jwt = require('jsonwebtoken');\r\nconst config = require('./../configs');\r\n\r\nexports.getMe = (req, res, next) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n    User.findById(decoded.id)\r\n        .then((re) => {\r\n            res.send({\r\n                data: re\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n}\r\n\r\nexports.getQuestionsAVoter = (req, res, next) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n    User.findById(decoded.id, 'questions')\r\n        .populate('questions')\r\n        .then((re) => {\r\n            res.send({\r\n                data: re\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n}\r\n\r\nexports.getMyQuestions = (req, res, next) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n    Question.find({ author: decoded.id })\r\n        .then((re) => {\r\n            res.send({\r\n                data: re\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n}\r\n\r\nexports.getLikeMutual = (req, res, next) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n    User.findById(decoded.id, 'likedme liked')\r\n        .populate('likedme.user', 'photo firstname birthday')\r\n        .populate('liked.user', 'photo firstname birthday')\r\n        .then((re) => {\r\n            let liked = re.liked.map(el => el.user._id);\r\n            let retour = [];\r\n\r\n            re.likedme.forEach((element) => {\r\n                if (liked.includes(element.user._id)) {\r\n                    retour.push(element);\r\n                }\r\n            })\r\n\r\n            res.send({\r\n                data: retour\r\n            })\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n}\r\n\r\nexports.getLikedMe = (req, res, next) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n    User.findById(decoded.id, 'likedme liked rejected')\r\n        .populate('likedme.user', 'photo firstname birthday')\r\n        .populate('liked.user', 'photo firstname birthday')\r\n        .populate('rejected.user', 'photo firstname birthday')\r\n        .then((re) => {\r\n            let liked = re.liked.map(el => el.user._id);\r\n            let rejected = re.rejected.map((a) => a.user_id);\r\n\r\n            let all = liked.concat(rejected);\r\n\r\n            let retour = [];\r\n\r\n            re.likedme.forEach((element) => {\r\n                if (!all.includes(element.user._id)) {\r\n                    retour.push(element);\r\n                }\r\n            })\r\n\r\n            res.send({\r\n                data: retour\r\n            })\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n}\r\n\r\nexports.reject = (req, res) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n\r\n    User.findByIdAndUpdate(decoded.id, { $push: { rejected: { user: req.body.id_user, }, } })\r\n        .then((data) => {\r\n            res.status(200).send({\r\n                state: true\r\n            });\r\n        }).catch((err) => {\r\n            res.status(404).send({\r\n                message: err.message || \"Some error occured\"\r\n            })\r\n        });\r\n}\r\n\r\nexports.match = (req, res) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n\r\n    User.findByIdAndUpdate(decoded.id, { $push: { liked: { user: req.body.id_user, }, } })\r\n        .then((data) => {\r\n            User.findByIdAndUpdate(req.body.id_user, { $push: { likedme: { user: decoded.id, }, } }\r\n            ).then((data) => {\r\n                res.status(200).send({\r\n                    state: true\r\n                });\r\n            }).catch((err) => {\r\n                res.status(404).send({\r\n                    message: err.message || \"Some error occured\"\r\n                })\r\n            });\r\n        }).catch((err) => {\r\n            res.status(404).send({\r\n                message: err.message || \"Some error occured\"\r\n            })\r\n        });\r\n}\r\n\r\nexports.getSuggestions = (req, res, next) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n    User.findById(decoded.id).then((data) => {\r\n        let questions = data.answered;\r\n        let rejected = data.rejected.map((a) => a.user);\r\n        let liked = (data.liked.map((a) => a.user)).concat(rejected);\r\n        liked.push(decoded.id);\r\n        User.find({\r\n            answered: { \"$in\": questions },\r\n            _id: { $nin: liked }\r\n        })\r\n            .then((re) => {\r\n                res.send({\r\n                    data: re\r\n                });\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }).catch((err) => {\r\n        res.status(404).send({\r\n            message: err.message || \"Some error occured\"\r\n        })\r\n    });\r\n}\r\n\r\nexports.firstUpload = (req, res, next) => {\r\n    const reqFiles = []\r\n    for (var i = 0; i < req.files.length; i++) {\r\n        reqFiles.push('public/' + req.files[i].filename)\r\n    }\r\n    let id = req.body.id;\r\n    User.findByIdAndUpdate(\r\n        id,\r\n        { $push: { photo: reqFiles } },\r\n        { new: true, useFindAndModify: false }\r\n    ).then(result => {\r\n        User.findById(id).then(response => {\r\n            res.status(201).send({\r\n                message: \"Photo updated\",\r\n                photo: true,\r\n                user: {\r\n                    photo: response.photo,\r\n                    firstname: response.firstname,\r\n                    isAdmin: response.isAdmin,\r\n                    nbr_photos: response.photo.length,\r\n                    nbr_answered: response.answered.length,\r\n                },\r\n            })\r\n        }).catch(er => {\r\n            res.status(500).send({\r\n                message: er.message || \"Some error occured\",\r\n                photo: false,\r\n            })\r\n        })\r\n    }).catch(err => {\r\n        console.log(err),\r\n            res.status(500).json({\r\n                error: err,\r\n                photo: false,\r\n            });\r\n    })\r\n}\r\n\r\nexports.countQuestions = (req, res) => {\r\n    let token = req.headers.authorization;\r\n    var decoded = jwt.decode(token);\r\n\r\n    User.findById(decoded.id).then((data) => {\r\n        if (!data) {\r\n            return res.status(404).send({\r\n                message: `user not found with id ${req.params.id}`\r\n            });\r\n        }\r\n        return res.send(\r\n            {\r\n                nombre: data.answered.length\r\n            }\r\n        );\r\n    }).catch((err) => {\r\n        res.status(404).send({\r\n            message: err.message || \"Some error occured\"\r\n        })\r\n    });\r\n}\r\n\r\n\r\nexports.login = (req, res) => {\r\n    User.findOne({ email: req.body.email })\r\n        .then((response) => {\r\n            if (!response) {\r\n                return res.status(404).send({\r\n                    auth: false,\r\n                    user: null,\r\n                    token: null,\r\n                    message: `no user find with  email ${req.body.email}`,\r\n                    display: `Cet adresse email n'est rattaché à aucun utilisateur.`\r\n                });\r\n            }\r\n            let compare = bcrypt.compareSync(req.body.password, response.password);\r\n            if (!compare) {\r\n                res.status(401).send({\r\n                    auth: false,\r\n                    user: null,\r\n                    token: null,\r\n                    message: 'Wrong password',\r\n                    display: `Le mot de passe entré n'est pas valide.`\r\n                });\r\n            }\r\n            let userToken = jwt.sign(\r\n                {\r\n                    id: response._id,\r\n                    admin: response.isAdmin\r\n                },\r\n                config.jwt.secret,\r\n                {\r\n                    expiresIn: 86400\r\n                }\r\n            );\r\n            return res.status(200).send({\r\n                auth: true,\r\n                user: {\r\n                    photo: response.photo,\r\n                    firstname: response.firstname,\r\n                    isAdmin: response.isAdmin,\r\n                    nbr_photos: response.photo.length,\r\n                    nbr_answered: response.answered.length,\r\n                },\r\n                token: userToken\r\n            });\r\n\r\n        }).catch((err) => {\r\n            return res.status(500).send({\r\n                message: err.message || \"Some error occured\",\r\n                display: \"Une erreur s'est produite.\"\r\n            })\r\n        });\r\n}\r\n\r\nexports.register = (req, res) => {\r\n    let hashedPassword = bcrypt.hashSync(req.body.password, 10);\r\n\r\n    const user = new User({\r\n        firstname: req.body.firstname,\r\n        gender: req.body.gender,\r\n        birthday: req.body.birthday,\r\n        location: req.body.location,\r\n        email: req.body.email,\r\n        password: hashedPassword,\r\n        isAdmin: req.body.isAdmin,\r\n    });\r\n\r\n    user.save().then(response => {\r\n        let userToken = jwt.sign(\r\n            {\r\n                id: response._id,\r\n                admin: response.isAdmin\r\n            },\r\n            config.jwt.secret,\r\n            {\r\n                expiresIn: 86400\r\n            }\r\n        );\r\n        return res.send({\r\n            auth: true,\r\n            user: {\r\n                photo: response.photo,\r\n                firstname: response.firstname,\r\n                isAdmin: response.isAdmin,\r\n                nbr_photos: response.photo.length,\r\n                nbr_answered: response.answered.length,\r\n            },\r\n            token: userToken\r\n        });\r\n    }).catch((err) => {\r\n        res.status(500).send({\r\n            message: err.message || \"Some error occured\"\r\n        })\r\n    })\r\n}"],"file":"users.controller.js"}